[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[warn] No sbt.version set in project/build.properties, base directory: C:\Work\BackEnd+Scala\WorkWithScala
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 1.8.0_221)
[debug] Load.defaultLoad until apply took 421.7236ms
[debug]     Load.loadUnit: plugins took 128.3272ms
[debug]     Load.loadUnit: defsScala took 0.5763ms
[debug] [Loading] Scanning directory C:\Work\BackEnd+Scala\WorkWithScala
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Work\BackEnd+Scala\WorkWithScala, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 35.6384 ms
[debug]         Load.resolveProject(workwithscala) took 68.8433ms
[debug]       Load.loadTransitive: finalizeProject(Project(id workwithscala, base: C:\Work\BackEnd+Scala\WorkWithScala, plugins: List(<none>))) took 146.4895ms
[debug] [Loading] Done in C:\Work\BackEnd+Scala\WorkWithScala, returning: (workwithscala)
[debug]     Load.loadUnit: loadedProjectsRaw took 179.1248ms
[debug]     Load.loadUnit: cleanEvalClasses took 0.4517ms
[debug]   Load.loadUnit(file:/C:/Work/BackEnd+Scala/WorkWithScala/, ...) took 318.3116ms
[debug] Load.apply: load took 537.1012ms
[debug] Load.apply: resolveProjects took 8.9806ms
[debug] Load.apply: finalTransforms took 72.9319ms
[debug] Load.apply: config.delegates took 12.5897ms
[debug] Load.apply: Def.make(settings)... took 1116.1448ms
[debug] Load.apply: structureIndex took 132.4824ms
[debug] Load.apply: mkStreams took 2.4404ms
[info] set current project to workwithscala (in build file:/C:/Work/BackEnd+Scala/WorkWithScala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-68895d824680d92963b0
[info] started sbt server
