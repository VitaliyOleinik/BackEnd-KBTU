[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[info] Updated file C:\Work\BackEnd+Scala\WorkWithScala\project\build.properties: set sbt.version to 1.4.3
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 1.8.0_221)
[debug] Load.defaultLoad until apply took 1030.1955ms
[debug]           Load.loadUnit: plugins took 233.0264ms
[debug]           Load.loadUnit: defsScala took 0.3978ms
[debug] [Loading] Scanning directory C:\Work\BackEnd+Scala\WorkWithScala\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Work\BackEnd+Scala\WorkWithScala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.1053 ms
[debug]               Load.resolveProject(workwithscala-build) took 56.2137ms
[debug]             Load.loadTransitive: finalizeProject(Project(id workwithscala-build, base: C:\Work\BackEnd+Scala\WorkWithScala\project, plugins: List(<none>))) took 118.768ms
[debug] [Loading] Done in C:\Work\BackEnd+Scala\WorkWithScala\project, returning: (workwithscala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 142.4552ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.3499ms
[debug]         Load.loadUnit(file:/C:/Work/BackEnd+Scala/WorkWithScala/project/, ...) took 382.4047ms
[debug]       Load.apply: load took 554.1218ms
[debug]       Load.apply: resolveProjects took 9.0177ms
[debug]       Load.apply: finalTransforms took 69.3964ms
[debug]       Load.apply: config.delegates took 12.459ms
[debug]       Load.apply: Def.make(settings)... took 1146.7053ms
[debug]       Load.apply: structureIndex took 175.9278ms
[debug]       Load.apply: mkStreams took 3.595ms
[info] loading project definition from C:\Work\BackEnd+Scala\WorkWithScala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 18082.3826ms
[debug]     Load.loadUnit: defsScala took 0.007ms
[debug] [Loading] Scanning directory C:\Work\BackEnd+Scala\WorkWithScala
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Work\BackEnd+Scala\WorkWithScala, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.771 ms
[debug]         Load.resolveProject(workwithscala) took 1.7626ms
[debug]       Load.loadTransitive: finalizeProject(Project(id workwithscala, base: C:\Work\BackEnd+Scala\WorkWithScala, plugins: List(<none>))) took 5.5031ms
[debug] [Loading] Done in C:\Work\BackEnd+Scala\WorkWithScala, returning: (workwithscala)
[debug]     Load.loadUnit: loadedProjectsRaw took 8.619ms
[debug]     Load.loadUnit: cleanEvalClasses took 0.0148ms
[debug]   Load.loadUnit(file:/C:/Work/BackEnd+Scala/WorkWithScala/, ...) took 18092.7185ms
[debug] Load.apply: load took 18117.7992ms
[debug] Load.apply: resolveProjects took 0.1424ms
[debug] Load.apply: finalTransforms took 15.601ms
[debug] Load.apply: config.delegates took 0.8883ms
[debug] Load.apply: Def.make(settings)... took 100.3509ms
[debug] Load.apply: structureIndex took 34.0342ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to workwithscala (in build file:/C:/Work/BackEnd+Scala/WorkWithScala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-68895d824680d92963b0
[info] started sbt server
