[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\MIBOOK~1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\MIBOOK~1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 15.0.2)
[debug]       Load.loadUnit: plugins took 460.3544ms
[debug]       Load.loadUnit: defsScala took 0.939ms
[debug] [Loading] Scanning directory C:\Users\Mi Book\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Mi Book\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 51.5814 ms
[debug]           Load.resolveProject(global-plugins) took 232.6642ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Mi Book\.sbt\1.0\plugins, plugins: List(<none>))) took 350.089ms
[debug] [Loading] Done in C:\Users\Mi Book\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 521.235ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5299ms
[debug]     Load.loadUnit(file:/C:/Users/Mi%20Book/.sbt/1.0/plugins/, ...) took 1019.6766ms
[debug]   Load.apply: load took 1611.8442ms
[debug]   Load.apply: resolveProjects took 36.1761ms
[debug]   Load.apply: finalTransforms took 438.76ms
[debug]   Load.apply: config.delegates took 124.8339ms
[debug]   Load.apply: Def.make(settings)... took 2271.2911ms
[debug]   Load.apply: structureIndex took 966.6579ms
[debug]   Load.apply: mkStreams took 4.5153ms
[info] loading global plugins from C:\Users\Mi Book\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 12054.7089ms
[debug]           Load.loadUnit: plugins took 48.8429ms
[debug]           Load.loadUnit: defsScala took 0.0048ms
[debug] [Loading] Scanning directory C:\Work\BackEnd+Scala\akkahttp-quickstart\project
[debug]             Load.loadUnit: mkEval took 9.8201ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Work\BackEnd+Scala\akkahttp-quickstart\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.3932 ms
[info] loading settings for project akkahttp-quickstart-build from idea.sbt ...
[debug]               Load.resolveProject(akkahttp-quickstart-build) took 5.1862ms
[debug]             Load.loadTransitive: finalizeProject(Project(id akkahttp-quickstart-build, base: C:\Work\BackEnd+Scala\akkahttp-quickstart\project, plugins: List(<none>))) took 10.562ms
[debug] [Loading] Done in C:\Work\BackEnd+Scala\akkahttp-quickstart\project, returning: (akkahttp-quickstart-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 217.4411ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.4574ms
[debug]         Load.loadUnit(file:/C:/Work/BackEnd+Scala/akkahttp-quickstart/project/, ...) took 278.0811ms
[debug]       Load.apply: load took 280.99ms
[debug]       Load.apply: resolveProjects took 0.1681ms
[debug]       Load.apply: finalTransforms took 19.9631ms
[debug]       Load.apply: config.delegates took 0.7276ms
[debug]       Load.apply: Def.make(settings)... took 162.8977ms
[debug]       Load.apply: structureIndex took 52.8696ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from C:\Work\BackEnd+Scala\akkahttp-quickstart\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2410.0117ms
[debug]     Load.loadUnit: defsScala took 0.0053ms
[debug] [Loading] Scanning directory C:\Work\BackEnd+Scala\akkahttp-quickstart
[debug]       Load.loadUnit: mkEval took 0.4913ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Work\BackEnd+Scala\akkahttp-quickstart, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.9841 ms
[info] loading settings for project akkahttp-quickstart from build.sbt ...
[debug]         Load.resolveProject(akkahttp-quickstart) took 56.0118ms
[debug]       Load.loadTransitive: finalizeProject(Project(id akkahttp-quickstart, base: C:\Work\BackEnd+Scala\akkahttp-quickstart, plugins: List(<none>))) took 61.8219ms
[debug] [Loading] Done in C:\Work\BackEnd+Scala\akkahttp-quickstart, returning: (akkahttp-quickstart)
[debug]     Load.loadUnit: loadedProjectsRaw took 5101.0831ms
[debug]     Load.loadUnit: cleanEvalClasses took 63.7445ms
[debug]   Load.loadUnit(file:/C:/Work/BackEnd+Scala/akkahttp-quickstart/, ...) took 7576.0236ms
[debug] Load.apply: load took 7579.146ms
[debug] Load.apply: resolveProjects took 0.2491ms
[debug] Load.apply: finalTransforms took 43.779ms
[debug] Load.apply: config.delegates took 0.6445ms
[debug] Load.apply: Def.make(settings)... took 196.8281ms
[debug] Load.apply: structureIndex took 52.2666ms
[debug] Load.apply: mkStreams took 0.0022ms
[info] set current project to akkahttp-quickstart (in build file:/C:/Work/BackEnd+Scala/akkahttp-quickstart/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52647 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52647, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to akkahttp-quickstart (in build file:/C:/Work/BackEnd+Scala/akkahttp-quickstart/)
[debug] > Exec(idea-shell, None, None)
