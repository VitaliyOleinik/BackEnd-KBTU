[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\MIBOOK~1\AppData\Local\Temp\idea9.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\MIBOOK~1\AppData\Local\Temp\idea9.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_221)
[debug]       Load.loadUnit: plugins took 120.1561ms
[debug]       Load.loadUnit: defsScala took 0.6386ms
[debug] [Loading] Scanning directory C:\Users\Mi Book\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Mi Book\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 28.9545 ms
[debug]           Load.resolveProject(global-plugins) took 65.5274ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Mi Book\.sbt\1.0\plugins, plugins: List(<none>))) took 134.3949ms
[debug] [Loading] Done in C:\Users\Mi Book\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 168.5416ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.329ms
[debug]     Load.loadUnit(file:/C:/Users/Mi%20Book/.sbt/1.0/plugins/, ...) took 301.4079ms
[debug]   Load.apply: load took 514.8397ms
[debug]   Load.apply: resolveProjects took 10.3136ms
[debug]   Load.apply: finalTransforms took 92.1423ms
[debug]   Load.apply: config.delegates took 13.7638ms
[debug]   Load.apply: Def.make(settings)... took 603.988ms
[debug]   Load.apply: structureIndex took 192.3965ms
[debug]   Load.apply: mkStreams took 3.207ms
[info] loading global plugins from C:\Users\Mi Book\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3801.1691ms
[debug]           Load.loadUnit: plugins took 40.235ms
[debug]           Load.loadUnit: defsScala took 0.0103ms
[debug] [Loading] Scanning directory C:\Work\BackEnd+Scala\Week-5\WorkWithActors\project
[debug]             Load.loadUnit: mkEval took 10.8597ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Work\BackEnd+Scala\Week-5\WorkWithActors\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.6152 ms
[info] loading settings for project workwithactors-build from idea9.sbt ...
[debug]               Load.resolveProject(workwithactors-build) took 11.2783ms
[debug]             Load.loadTransitive: finalizeProject(Project(id workwithactors-build, base: C:\Work\BackEnd+Scala\Week-5\WorkWithActors\project, plugins: List(<none>))) took 14.6102ms
[debug] [Loading] Done in C:\Work\BackEnd+Scala\Week-5\WorkWithActors\project, returning: (workwithactors-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 224.2086ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.5422ms
[debug]         Load.loadUnit(file:/C:/Work/BackEnd+Scala/Week-5/WorkWithActors/project/, ...) took 272.549ms
[debug]       Load.apply: load took 274.4102ms
[debug]       Load.apply: resolveProjects took 0.1549ms
[debug]       Load.apply: finalTransforms took 13.3466ms
[debug]       Load.apply: config.delegates took 0.7475ms
[debug]       Load.apply: Def.make(settings)... took 151.529ms
[debug]       Load.apply: structureIndex took 35.5824ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from C:\Work\BackEnd+Scala\Week-5\WorkWithActors\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 823.9438ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Work\BackEnd+Scala\Week-5\WorkWithActors
[debug]       Load.loadUnit: mkEval took 0.2682ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Work\BackEnd+Scala\Week-5\WorkWithActors, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.6003 ms
[info] loading settings for project workwithactors from build.sbt ...
[debug]         Load.resolveProject(workwithactors) took 43.9369ms
[debug]       Load.loadTransitive: finalizeProject(Project(id workwithactors, base: C:\Work\BackEnd+Scala\Week-5\WorkWithActors, plugins: List(<none>))) took 49.0727ms
[debug] [Loading] Done in C:\Work\BackEnd+Scala\Week-5\WorkWithActors, returning: (workwithactors)
[debug]     Load.loadUnit: loadedProjectsRaw took 141.1003ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.3102ms
[debug]   Load.loadUnit(file:/C:/Work/BackEnd+Scala/Week-5/WorkWithActors/, ...) took 970.9829ms
[debug] Load.apply: load took 972.8125ms
[debug] Load.apply: resolveProjects took 0.148ms
[debug] Load.apply: finalTransforms took 32.4689ms
[debug] Load.apply: config.delegates took 0.4881ms
[debug] Load.apply: Def.make(settings)... took 88.1824ms
[debug] Load.apply: structureIndex took 30.8285ms
[debug] Load.apply: mkStreams took 0.0035ms
[info] set current project to WorkWithActors (in build file:/C:/Work/BackEnd+Scala/Week-5/WorkWithActors/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62601 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62601, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to WorkWithActors (in build file:/C:/Work/BackEnd+Scala/Week-5/WorkWithActors/)
[debug] > Exec(idea-shell, None, None)
