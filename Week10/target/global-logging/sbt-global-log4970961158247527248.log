[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\MIBOOK~1\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\MIBOOK~1\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Amazon.com Inc. Java 1.8.0_282)
[debug]       Load.loadUnit: plugins took 126.18ms
[debug]       Load.loadUnit: defsScala took 0.3717ms
[debug] [Loading] Scanning directory C:\Users\Mi Book\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Mi Book\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.8005 ms
[debug]           Load.resolveProject(global-plugins) took 60.7549ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Mi Book\.sbt\1.0\plugins, plugins: List(<none>))) took 118.3733ms
[debug] [Loading] Done in C:\Users\Mi Book\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 142.8613ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4013ms
[debug]     Load.loadUnit(file:/C:/Users/Mi%20Book/.sbt/1.0/plugins/, ...) took 279.3203ms
[debug]   Load.apply: load took 504.3219ms
[debug]   Load.apply: resolveProjects took 7.8218ms
[debug]   Load.apply: finalTransforms took 88.0315ms
[debug]   Load.apply: config.delegates took 9.2894ms
[debug]   Load.apply: Def.make(settings)... took 547.7168ms
[debug]   Load.apply: structureIndex took 123.3048ms
[debug]   Load.apply: mkStreams took 1.8346ms
[info] loading global plugins from C:\Users\Mi Book\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3270.4563ms
[debug]           Load.loadUnit: plugins took 41.5641ms
[debug]           Load.loadUnit: defsScala took 0.0054ms
[debug] [Loading] Scanning directory C:\Work\BackEnd+Scala\Week10\project
[debug]             Load.loadUnit: mkEval took 8.7535ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Work\BackEnd+Scala\Week10\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.9518 ms
[info] loading settings for project week10-build from idea1.sbt ...
[debug]               Load.resolveProject(week10-build) took 3.2379ms
[debug]             Load.loadTransitive: finalizeProject(Project(id week10-build, base: C:\Work\BackEnd+Scala\Week10\project, plugins: List(<none>))) took 6.9624ms
[debug] [Loading] Done in C:\Work\BackEnd+Scala\Week10\project, returning: (week10-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 249.6366ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.9053ms
[debug]         Load.loadUnit(file:/C:/Work/BackEnd+Scala/Week10/project/, ...) took 297.2957ms
[debug]       Load.apply: load took 299.0297ms
[debug]       Load.apply: resolveProjects took 0.0972ms
[debug]       Load.apply: finalTransforms took 8.9082ms
[debug]       Load.apply: config.delegates took 0.5088ms
[debug]       Load.apply: Def.make(settings)... took 88.82ms
[debug]       Load.apply: structureIndex took 37.2329ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from C:\Work\BackEnd+Scala\Week10\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 738.905ms
[debug]     Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory C:\Work\BackEnd+Scala\Week10
[debug]       Load.loadUnit: mkEval took 0.2759ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Work\BackEnd+Scala\Week10, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.8059 ms
[info] loading settings for project week10 from build.sbt ...
[debug]         Load.resolveProject(week10) took 31.9948ms
[debug]       Load.loadTransitive: finalizeProject(Project(id week10, base: C:\Work\BackEnd+Scala\Week10, plugins: List(<none>))) took 37.3667ms
[debug] [Loading] Done in C:\Work\BackEnd+Scala\Week10, returning: (week10)
[debug]     Load.loadUnit: loadedProjectsRaw took 146.1386ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.0946ms
[debug]   Load.loadUnit(file:/C:/Work/BackEnd+Scala/Week10/, ...) took 890.7609ms
[debug] Load.apply: load took 892.2748ms
[debug] Load.apply: resolveProjects took 0.0992ms
[debug] Load.apply: finalTransforms took 28.0662ms
[debug] Load.apply: config.delegates took 0.3561ms
[debug] Load.apply: Def.make(settings)... took 89.1526ms
[debug] Load.apply: structureIndex took 31.2835ms
[debug] Load.apply: mkStreams took 0.0043ms
[info] set current project to Week10 (in build file:/C:/Work/BackEnd+Scala/Week10/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55691 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55691, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Week10 (in build file:/C:/Work/BackEnd+Scala/Week10/)
[debug] > Exec(idea-shell, None, None)
